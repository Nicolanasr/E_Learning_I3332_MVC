// <auto-generated />
using System;
using E_Learning_I3332_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Learning_I3332_MVC.Migrations
{
    [DbContext(typeof(MySQLDBContext))]
    [Migration("20220709234454_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Courses", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("C_SpecializationId")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("Credits")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("C_SpecializationId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Specializations", b =>
                {
                    b.Property<int>("SpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("SpecializationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SpecializationId");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.StudentCourses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EntolementDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SC_CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SC_StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SC_CourseId");

                    b.HasIndex("SC_StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Students", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PhoneNumer")
                        .HasColumnType("int");

                    b.Property<int>("S_SpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("S_UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("S_SpecializationId");

                    b.HasIndex("S_UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Teachers", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PhoneNumer")
                        .HasColumnType("int");

                    b.Property<int>("T_SpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("T_UserId")
                        .HasColumnType("int");

                    b.Property<int?>("YearsOfExperience")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.HasIndex("T_SpecializationId");

                    b.HasIndex("T_UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Teaches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("T_CourseId")
                        .HasColumnType("int");

                    b.Property<int>("T_TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("T_CourseId");

                    b.HasIndex("T_TeacherId");

                    b.ToTable("Teaches");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Courses", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Specializations", "Specialization")
                        .WithMany()
                        .HasForeignKey("C_SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.StudentCourses", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Courses", "CourseId")
                        .WithMany()
                        .HasForeignKey("SC_CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_I3332_MVC.Models.Students", "StudentId")
                        .WithMany()
                        .HasForeignKey("SC_StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseId");

                    b.Navigation("StudentId");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Students", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Specializations", "Specialization")
                        .WithMany()
                        .HasForeignKey("S_SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_I3332_MVC.Models.Users", "UserId")
                        .WithMany()
                        .HasForeignKey("S_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Teachers", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Specializations", "Specialization")
                        .WithMany()
                        .HasForeignKey("T_SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_I3332_MVC.Models.Users", "UserId")
                        .WithMany()
                        .HasForeignKey("T_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Teaches", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Courses", "CourseId")
                        .WithMany()
                        .HasForeignKey("T_CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_I3332_MVC.Models.Teachers", "TeacherId")
                        .WithMany()
                        .HasForeignKey("T_TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseId");

                    b.Navigation("TeacherId");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Users", b =>
                {
                    b.HasOne("E_Learning_I3332_MVC.Models.Roles", "Role")
                        .WithMany("UsersList")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("E_Learning_I3332_MVC.Models.Roles", b =>
                {
                    b.Navigation("UsersList");
                });
#pragma warning restore 612, 618
        }
    }
}
